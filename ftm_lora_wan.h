#ifndef	_FTM_LORA_WAN_H_
#define	_FTM_LORA_WAN_H_	1

#include "ftm_lora.h"

typedef enum
{
	FTM_LORA_MAC_FRAME_TYPE_JOIN_REQ     			= 0x00,
	FTM_LORA_MAC_FRAME_TYPE_JOIN_ACCEPT           	= 0x01,
	FTM_LORA_MAC_FRAME_TYPE_DATA_UNCONFIRMED_UP		= 0x02,
	FTM_LORA_MAC_FRAME_TYPE_DATA_UNCONFIRMED_DOWN	= 0x03,
	FTM_LORA_MAC_FRAME_TYPE_DATA_CONFIRMED_UP		= 0x04,
	FTM_LORA_MAC_FRAME_TYPE_DATA_CONFIRMED_DOWN		= 0x05,
	FTM_LORA_MAC_FRAME_TYPE_RFU 					= 0x06,
	FTM_LORA_MAC_FRAME_TYPE_PROPRIETARY 			= 0x07,
} FTM_LORA_MAC_FRAME_TYPE, _PTR_ FTM_LORA_MAC_FRAME_TYPE_PTR;

typedef enum
{
	FTM_LORA_MAC_MOTE_MAC_LINK_CHECK_REQ          = 0x02,
	FTM_LORA_MAC_MOTE_MAC_LINK_ADR_ANS            = 0x03,
	FTM_LORA_MAC_MOTE_MAC_DUTY_CYCLE_ANS          = 0x04,
	FTM_LORA_MAC_MOTE_MAC_RX_PARAM_SETUP_ANS      = 0x05,
	FTM_LORA_MAC_MOTE_MAC_DEV_STATUS_ANS          = 0x06,
	FTM_LORA_MAC_MOTE_MAC_NEW_CHANNEL_ANS         = 0x07,
	FTM_LORA_MAC_MOTE_MAC_RX_TIMING_SETUP_ANS     = 0x08,

} FTM_LORA_MAC_MOTE_CMD, _PTR_ FTM_LORA_MAC_MOTE_CMD_PTR;

typedef enum
{
	FTM_LORA_MAC_SRV_MAC_LINK_CHECK_ANS           = 0x02,
	FTM_LORA_MAC_SRV_MAC_LINK_ADR_REQ             = 0x03,
	FTM_LORA_MAC_SRV_MAC_DUTY_CYCLE_REQ           = 0x04,
	FTM_LORA_MAC_SRV_MAC_RX_PARAM_SETUP_REQ       = 0x05,
	FTM_LORA_MAC_SRV_MAC_DEV_STATUS_REQ           = 0x06,
	FTM_LORA_MAC_SRV_MAC_NEW_CHANNEL_REQ          = 0x07,
	FTM_LORA_MAC_SRV_MAC_RX_TIMING_SETUP_REQ      = 0x08,

} FTM_LORA_MAC_SRV_CMD, _PTR_ FTM_LORA_MAC_SRV_CMD_PTR;

/*!
 * LoRaMAC header field definition
  */
typedef union
{
	FTM_UINT8	bValue;
	struct
	{
		FTM_UINT8	bMajor      : 2;
		FTM_UINT8	bRFU        : 3;
		FTM_UINT8	bMType      : 3;
	} xBits;
} PACKED FTM_LORA_MAC_HEADER, _PTR_ FTM_LORA_MAC_HEADER_PTR;


/*!
 * LoRaMAC frame header field definition
  */
typedef union
{
	FTM_UINT8 		bValue;
	struct
	{
		FTM_UINT8 bFOptsLen		: 4;
		FTM_UINT8 bFPending     : 1;
		FTM_UINT8 bAck          : 1;
		FTM_UINT8 bAdrAckReq    : 1;
		FTM_UINT8 bAdr          : 1;
	} xBits;
} PACKED FTM_LORA_MAC_FRAME_CTRL, _PTR_ FTM_LORA_MAC_FRAME_CTRL_PTR;


typedef	struct
{
	FTM_LORA_MAC_HEADER		xHeader;
	FTM_UINT8				pAppEUI[8];
	FTM_UINT8				pDevEUI[8];
	FTM_UINT16				usDevNonce;
	FTM_UINT32				ulMic;
} PACKED FTM_LORA_MAC_FRAME_JOIN_REQUEST, _PTR_ FTM_LORA_MAC_FRAME_JOIN_REQUEST_PTR;

typedef struct
{
	FTM_LORA_MAC_HEADER		xHeader;
	FTM_UINT8				pAppNonce[3];
	FTM_UINT8				pNetID[3];
	FTM_UINT8				pDevAddr[4];
	FTM_UINT8				bDLSettings;
	FTM_UINT8				bRxDelay;
	FTM_UINT32				ulMic;
} PACKED FTM_LORA_MAC_FRAME_JOIN_ACCEPT, _PTR_ FTM_LORA_MAC_FRAME_JOIN_ACCEPT_PTR;

FTM_RET	FTM_LOR_MAC_computeJoinMic(FTM_UINT8_PTR pFrame, FTM_UINT32 ulLen4, FTM_UINT8 pAppKey[16], FTM_UINT32_PTR pulMic);
#endif

